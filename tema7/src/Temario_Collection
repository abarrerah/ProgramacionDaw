Collections

-Listas:En el Array de objetos, no importa el elemento en si. Solo la ordenación que se tenga.Puedes estar repetidos.
-Sets: En el Array de objetos, no importa ni el orden que presente pero SI que tenga elementos repetidos, ya que no pueden tenerlos.
-Mapas: En el Array de objetos, no importa si el elemento esté repetido, pero si por una clave (QUE NO DEBE ESTAR REPETIDO).


Listas
    Las listas pueden ser de dos tipos: ArrayList o LinkedList.

    *El ArrayList es mejor con lectura y modificación de archivos.
    (ARRAYLIST<'TIPO CON EL QUE SE VA A TRABAJAR'> ..nombre.. = new ARRAYLIST<>();)
    *El LinkedList es mejor con inserción y para manejar elementos.

    Si quiero recorrer cualquier lista ( da igual el tipo), se debe implementar la clase Iterator

Sets
    Los sets pueden ser de tres tipos: HashSet,TreeSet y LinkedHashSet.

    *HashSet:tiene buen rendimiento ,pero no organiza el orden.

    *TreeSets: peor rendimiento pero organiza el orden.

    *LinkedHashSet: organiza el orden ya que siempre se introduce los elementos por la parte posterior.

Mapas
    Los maps son estructuras dinámicas que contiene una clave y un valor por cada elemento de la estructura.
    No se pueden repetir clave, pero si el valor que contengan.

    Los mapas pueden ser:
    *HashMap: es una estructura que no organiza el orden.

    *TreeMap: es una estructura que organiza el orden.

    *LinkedHashMap : es una estructura que mantiene el orden de inserción.
    No son iterable y tampoco se le puede aplicar el foreach.Se debe transformar a otro tipo (Lista o Set).
    El getkey solo muestra un conjunto con las claves y el getvalue, solo muestra un conjunto con el valor del mapa.

    Si se quiere mantener ambos en un conjunto, se aplica ambos en el set.
    Set<Map.Entry<String,Double>> e1=m1.entrySet();